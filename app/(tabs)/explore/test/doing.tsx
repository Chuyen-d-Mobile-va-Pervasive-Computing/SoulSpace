import Heading from "@/components/Heading";
import { router } from "expo-router";
import React, { useState } from "react";
import { Pressable, ScrollView, Text, View } from "react-native";

export default function TestDoingScreen() {
  const [selected, setSelected] = useState<number | null>(null);

  return (
    <View className="flex-1 bg-[#020659]">
      {/* Header */}
      <Heading title="" showBack={true} onBackPress={() => router.back()} />

      {/* Body */}
      <ScrollView 
        className="flex-1 mt-4 px-3 py-8 gap-5"
        contentContainerStyle={{ paddingBottom: 20 }}
      >
        {/* üîπ M√¥ t·∫£ */}
        <Text className="text-white text-base font-medium text-center mb-5">
          B√†i tr·∫Øc nghi·ªám MBTI (Myers‚ÄìBriggs Type Indicator) d·ª±a tr√™n l√Ω thuy·∫øt ph√¢n lo·∫°i t√≠nh c√°ch
          c·ªßa Carl Jung v√† ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi Isabel Briggs Myers v√† Katharine Cook Briggs. B√†i
          test gi√∫p x√°c ƒë·ªãnh ki·ªÉu t√≠nh c√°ch c·ªßa b·∫°n d·ª±a tr√™n 4 nh√≥m ƒë·∫∑c ƒëi·ªÉm ch√≠nh, t·ª´ ƒë√≥ hi·ªÉu r√µ
          h∆°n v·ªÅ c√°ch b·∫°n suy nghƒ©, c·∫£m nh·∫≠n v√† t∆∞∆°ng t√°c v·ªõi th·∫ø gi·ªõi
        </Text>

        {/* üîπ Card c√¢u h·ªèi */}
        <View className="rounded-lg overflow-hidden bg-white/20 mb-5">
          {/* Header c√¢u h·ªèi */}
          <View className="p-3 bg-white/30">
            <Text className="text-[#ccc] text-sm font-medium text-center">C√¢u h·ªèi 1/7</Text>
            <Text className="text-white text-base font-medium text-center">
              aaaaaaaaaaaaaaaaaaaaa
            </Text>
          </View>

          {/* L·ª±a ch·ªçn */}
          {["C√≥", "Kh√¥ng", "ƒê√¥i khi", "Ch∆∞a ch·∫Øc"].map((item, index) => (
            <Pressable
              key={index}
              onPress={() => setSelected(index)}
              className="flex-row justify-between items-center h-12 px-3 border-t border-white/20"
            >
              <Text className="text-white text-base font-medium">{item}</Text>
              <View
                className={`w-6 h-6 rounded-full border-2 ${
                  selected === index ? "border-[#6f04d9] bg-[#6f04d9]/60" : "border-white"
                }`}
              />
            </Pressable>
          ))}
        </View>

                <View className="rounded-lg overflow-hidden bg-white/20 mb-5">
          {/* Header c√¢u h·ªèi */}
          <View className="p-3 bg-white/30">
            <Text className="text-[#ccc] text-sm font-medium text-center">C√¢u h·ªèi 1/7</Text>
            <Text className="text-white text-base font-medium text-center">
              aaaaaaaaaaaaaaaaaaaaa
            </Text>
          </View>

          {/* L·ª±a ch·ªçn */}
          {["C√≥", "Kh√¥ng", "ƒê√¥i khi", "Ch∆∞a ch·∫Øc"].map((item, index) => (
            <Pressable
              key={index}
              onPress={() => setSelected(index)}
              className="flex-row justify-between items-center h-12 px-3 border-t border-white/20"
            >
              <Text className="text-white text-base font-medium">{item}</Text>
              <View
                className={`w-6 h-6 rounded-full border-2 ${
                  selected === index ? "border-[#6f04d9] bg-[#6f04d9]/60" : "border-white"
                }`}
              />
            </Pressable>
          ))}
        </View>
    
        {/* Footer Buttons */}
        <View className="pb-6">
          <Pressable 
            className="h-12 items-center justify-center rounded-lg border border-[#6f04d9] bg-[#6f04d9]/40"
            onPress={() => router.push("/(tabs)/explore/test/done")}
          >
            <Text className="text-white font-bold text-base">L√†m xong</Text>
          </Pressable>
        </View>
      </ScrollView>
    </View>
  );
}